%{
package brb

// THIS FILE IS AUTOGENERATED, DO NOT EDIT!

func (y *yylexer) Lex(val *yySymType) int {
	c := y.current
	if y.empty {
		c, y.empty = y.getc(), false
	}
%}

%yyc		c
%yyn		c = y.getc()

DIGIT		[0-9]+
EXPONENT	[eE][-+]?{DIGIT}
NUMBER		{DIGIT}"."{DIGIT}?{EXPONENT}?|{DIGIT}{EXPONENT}?|"."{DIGIT}{EXPONENT}?
VARIABLE	[a-z]+

%%
		y.buf = y.buf[:0]

[ \t]+

[\n\r]		y.line++

"inv"		return INV

"$"{DIGIT}	return y.positional(val, string(y.buf))

{NUMBER}	return y.number(val, string(y.buf))

{VARIABLE}	return y.variable(val, string(y.buf))

%%
		y.empty = true
		return int(c)
}
